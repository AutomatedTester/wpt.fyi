// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/web-platform-tests/wpt.fyi/shared (interfaces: NotificationsAPI)

// Package sharedtest is a generated GoMock package.
package sharedtest

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNotificationsAPI is a mock of NotificationsAPI interface
type MockNotificationsAPI struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationsAPIMockRecorder
}

// MockNotificationsAPIMockRecorder is the mock recorder for MockNotificationsAPI
type MockNotificationsAPIMockRecorder struct {
	mock *MockNotificationsAPI
}

// NewMockNotificationsAPI creates a new mock instance
func NewMockNotificationsAPI(ctrl *gomock.Controller) *MockNotificationsAPI {
	mock := &MockNotificationsAPI{ctrl: ctrl}
	mock.recorder = &MockNotificationsAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificationsAPI) EXPECT() *MockNotificationsAPIMockRecorder {
	return m.recorder
}

// SendPushNotification mocks base method
func (m *MockNotificationsAPI) SendPushNotification(arg0, arg1, arg2 string, arg3 *string) error {
	ret := m.ctrl.Call(m, "SendPushNotification", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendPushNotification indicates an expected call of SendPushNotification
func (mr *MockNotificationsAPIMockRecorder) SendPushNotification(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendPushNotification", reflect.TypeOf((*MockNotificationsAPI)(nil).SendPushNotification), arg0, arg1, arg2, arg3)
}
